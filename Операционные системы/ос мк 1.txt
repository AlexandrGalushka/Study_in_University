


1)клисифікація ОС
	по многозадачности
		кооперативная многозадачность, ввытесняющая многозадачность
	сфера применения
	по размеру компьютера
	по способу внутренней организации (с микроядром, без микроядра, монолитная)
2) алгоритми планування і диспетчеризації
	диспетчер. - это переключение контента между потоками
	планирование - когда запускать программу
	например ожидание ввода вывода
3) методи керування пам'яттю
	страничная организация
	сегментно-страничная организация
	способи управления динамической памятью
4) потоки
	дескриптор защиты
	имя
	число пользователей
	состояния (работает, ожидание и тд)
	параметры
	можно приостанавливать, воосстанавливать поток
5) процессы
	обьекты ядра, память
	можно создавать программно
	у процесса есть текущий каталог
	у каждого процесса своё окружение
6) синхронізація потоків з використанням критичних секцій
	в виндовс есть специальные структуры - критические секции
	созданы для синхронизации взаимоисключающих потоков
	дается доступ
	зайти, выйти, удалить
7) використування інтерлоад функцій
	как крит. секция только проще
	для числовых значений могут делать арифм действия и тд
	в адресном поле проводятся действия
8) мутекс
	есть обьекты ядра которые используются для синхронизации
	мутекс - бинарный семофор. семофоры могут быть со счетчиком
	обьект ядра знает кто заблокирован
	отличие между семофорами и мутексами это счетчик
	еще одно занятый мутекс можно проходить без блокировки
	мутекс кому то запрещает заходить а кому то разрешает причем много раз
9) семофори
10) проекції файлів в пам'яті
	другой способ работы с файлами:
	можно отображать какой то файл в диапазон адресов
	не надо буфера
	работаем с файлом непосредственно в памяти
	наложили на структуру на прочитанную область
11) стандартна та додаткові купи процесорів
	 у каждого процесса есть своя куча она создется и мы  сней работаем средствами языка программирования
	мы рассматривали (нет) преимущества работы в разных языках
	блокировка, с каждой кучей связан обьект
	если программа однопоточная то блокировка не нужна
	если уверены в себе то можно удалить блокировку кучи
	можно разделить кучи по потокам
	можно разделить по размерам
	можно разделить по месту использования (сделать данные более компактными)
	

написати програми яка демонструє роботи паралельних потоків туда сюда семофори вся хуйня
писатель-читатель 

1) https://www.lessons-tva.info/edu/e-inf1/e-inf1-3-3.html
2) https://studopedia.su/13_98791_planirovanie-i-dispetcherizatsiya-potokov.html
3) http://udik.com.ua/books/book-626/chapter-22852/
4) https://sites.google.com/site/operacionnyesistemyxx/teoreticeskaa-cast/potoki